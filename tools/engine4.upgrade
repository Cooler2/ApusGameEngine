Engine4 upgrade script:
MyServis -> Apus.MyServis
EventMan -> Apus.EventMan
CrossPlatform -> Apus.CrossPlatform
AnimatedValues -> Apus.AnimatedValues
Structs       -> Apus.Structs
Publics       -> Apus.Publics
Geom2D        -> Apus.Geom2D
Geom3D        -> Apus.Geom3D
FastGFX       -> Apus.FastGFX
GfxFormats    -> Apus.GfxFormats
Colors        -> Apus.Colors
Logging       -> Apus.Logging
StackTrace    -> Apus.StackTrace
MyRegExpr     -> Apus.RegExpr

EngineAPI     -> Apus.Engine.API 
UIScene       -> Apus.Engine.UIScene
GameApp       -> Apus.Engine.GameApp
CustomStyle   -> Apus.Engine.CustomStyle
ConsoleScene  -> Apus.Engine.ConsoleScene
CmdProc       -> Apus.Engine.CmdProc
UIClasses     -> Apus.Engine.UIClasses
UIRender      -> Apus.Engine.UIRender
TweakScene    -> Apus.Engine.TweakScene
stdEffects    -> Apus.Engine.SceneEffects
OBJLoader     -> Apus.Engine.OBJLoader
Model3D       -> Apus.Engine.Model3D
EngineTools   -> _remove_

EventStr -> TEventStr

SetGameSettings( -> SetupGameSettings(
TTextureImage -> TTexture
CreateDiffPatch( -> CreateBackupPatch(
ApplyDiffPatch( -> ApplyBackupPatch(

painter.TextOut( -> txt->Write(
painter.TextOutW( -> txt->WriteW(
painter. -> draw.
draw.SetClipping( -> gfx.clip.rect(
TUIControl -> TUIElement
texman.AllocImage( -> AllocImage(
draw.GetMVPMatrix -> transform.MVPMatrix
draw.ResetTexMode -> shader.DefaultTexMode
texMan. -> gfx.resMan.
draw.SetOrthographic -> transform.Orthographic
draw.SetPerspective -> transform.Perspective
draw.SetupCamera -> transform.SetCamera
draw.LoadFont( -> txt.LoadFont(
draw.GetFont( -> txt.GetFont(
DrawPolyline( -> Polyline(
draw.ResetClipping -> gfx.clip.Restore
draw.TextOutW( -> txt.WriteW(
draw.TextOut( -> txt.Write(
draw.TextWidthW( -> txt.WidthW(
draw.TextWidth( -> txt.Width(
draw.DrawScaled( -> draw.Scaled(
draw.DrawRotScaled( -> draw.RotScaled(
draw.DrawImage( -> draw.Image(
draw.DrawParticles( -> draw.Particles(
draw.DrawDouble( -> draw.DoubleTex(
draw.DrawCentered( -> draw.Centered(
draw.DrawLine( -> draw.Line(

draw.SetMode( -> gfx.target.BlendMode(
draw.SetMask( -> gfx.target.Mask(
draw.ResetMask -> gfx.target.UnMask
draw.SetTexMode( -> shader.TexMode(

dfmStretch -> dfmFullSize
transpmode -> shape
tmOpaque -> shapeFull
tmTransparent -> shapeEmpty